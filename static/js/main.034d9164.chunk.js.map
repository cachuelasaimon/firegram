{"version":3,"sources":["firebase/utils.js","firebase/config.js","redux/Types/index.js","redux/Actions/index.js","components/navigation/index.js","hooks/index.js","components/profile/progressBar.js","components/profile/imageGrid.js","components/profile/index.js","components/profile/modal.js","pages/profile/index.js","components/signUpForm/index.js","pages/sign-up/index.js","components/loginForm/index.js","pages/login/index.js","App.js","reportWebVitals.js","redux/Reducers/authReducer.js","redux/Reducers/index.js","redux/Saga/authSaga.js","redux/Saga/index.js","redux/store.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","storage","GoogleAPI","GoogleAuthProvider","setCustomParameters","prompt","handleProfile","a","userAuth","additionalData","uid","userRef","doc","get","exists","displayName","email","timestamp","Date","set","createdAt","err","console","log","authActions","loginStart","password","type","payload","loginSuccess","user","mapState","currentUser","Nav","props","setPage","dispatch","useHistory","useDispatch","useSelector","useEffect","className","onClick","ProgressBar","file","setFile","useState","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","getDownloadURL","add","useStorage","style","width","Math","round","ImageGrid","setSelectedImg","pictureList","setPictureList","unsub","orderBy","onSnapshot","pictures","listOfPictures","forEach","picture","push","id","data","useFirestore","setPicture","list","pic","map","link","i","div","src","alt","Profile","acceptedFiles","uploadImg","e","selectedFile","target","files","includes","onChange","Modal","selectedImg","classList","contains","useStyle","makeStyles","margins","marginBottom","btn","btnContainer","height","display","justifyItems","CustomTextField","label","classes","useField","field","meta","TextField","size","variant","touched","helperText","fullWidth","CustomButton","content","color","Button","SignInForm","handleSubmit","signUpStart","initialValues","confirmPassword","validationSchema","Yup","min","max","required","oneOf","onSubmit","values","resetForm","SignUp","marginTop","LoginForm","href","Login","App","page","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","state","action","getUserDataFromFirestoreDB","emailLogin","onEmailSignIn","createUser","onUserSignUp","isAuthenticated","onCheckUserSession","logout","onLogout","authSaga","call","signInWithEmailAndPassword","takeLatest","createUserWithEmailAndPassword","Promise","resolve","reject","unsubscribe","onAuthStateChanged","signOut","all","Sagas","sagaMiddleware","createSagaMiddleware","middleware","thunk","store","createStore","Reducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","run","Saga","ReactDOM","render","StrictMode","Store","document","getElementById"],"mappings":"gVAQKA,IAASC,KAAKC,OAEVF,IAASG,MADdH,IAASI,cCTiB,CAC1BC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,gBACnBC,MAAO,+CDOJ,IAAMC,EAAOX,IAASW,OAChBC,EAAYZ,IAASY,YACrBC,EAAUb,IAASa,UAG1BC,EAAY,IAAId,IAASW,KAAKI,mBACpCD,EAAUE,oBAAoB,CAAEC,OAAQ,mBACjC,IAGMC,EAAa,uCAAG,yCAAAC,EAAA,yDAAQC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,eACvCD,EADqB,wDAGbE,EAAQF,EAARE,IACFC,EAAUX,EAAUY,IAAV,gBAAuBF,IAJlB,SAMFC,EAAQE,MANN,OAOrB,IAPqB,OAOZC,OAAQ,CAELC,EAAuBP,EAAvBO,YAAaC,EAAUR,EAAVQ,MACfC,EAAY,IAAIC,KACtB,IAEIP,EAAQQ,IAAR,aACIJ,cACAC,QACAI,UAAWH,GACRR,IAET,MAAOY,GAAOC,QAAQC,IAAIF,IAnBX,yBAoBZV,GApBY,4CAAH,sD,iBEvBba,EACI,cADJA,EAEM,gBAFNA,EAGM,gBAHNA,EAKW,qBALXA,EAMK,eANLA,EAOO,iBCLPC,EAAa,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAOU,EAAV,EAAUA,SAAV,MAAyB,CAC/CC,KAAMH,EACNI,QAAS,CAACZ,QAAOU,cAGRG,EAAe,SAACC,GAAD,MAAW,CACnCH,KAAMH,EACNI,QAASE,ICFPC,EAAW,SAAC,GAAD,MAAa,CAC1BC,YADa,EAAEF,KACGE,cAGP,SAASC,EAAKC,GAAQ,IACzBC,EAAYD,EAAZC,QAEFC,GADUC,cACCC,eACTN,EAAgBO,YAAYR,GAA5BC,YAUR,OAJAQ,qBAAU,WACPJ,EDOgC,CACnCT,KAAMH,MCPJ,IAGE,qBAAKiB,UAAU,aAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,OAAOC,QAAS,kBAAIP,EAAQ,cAA3C,sBAGA,sBAAKM,UAAU,QAAf,WACMT,GACF,eAAC,WAAD,WACI,sBAAMU,QAAS,kBAAIP,EAAQ,WAA3B,mBACA,sBAAMO,QAAS,kBAAIP,EAAQ,aAA3B,uBAGJH,GACA,eAAC,WAAD,WACE,sBAAMU,QAAS,kBAAIpB,QAAQC,IAAI,iBAA/B,SAAkDS,EAAYjB,cAC9D,sBAAM2B,QAAS,kBAAIN,ED7BZ,CACzBT,KAAMH,KC4BY,+BCtCf,ICqBQmB,EArBK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAAa,EDAhB,SAACD,GAAU,IAAD,EACAE,mBAAS,GADT,mBACzBC,EADyB,KACfC,EADe,OAENF,mBAAS,MAFH,mBAEzBG,EAFyB,KAElBC,EAFkB,OAGVJ,mBAAS,MAHC,mBAGzBK,EAHyB,KAGpBC,EAHoB,KAwBhC,OAnBAZ,qBAAU,WAEN,IAAMa,EAAapD,EAAQqD,IAAIV,EAAKW,MAC9BC,EAAgBxD,EAAUyD,WAAW,YAG3CJ,EAAWK,IAAId,GAAMe,GAAG,iBAAgB,SAACC,GAErC,IAAIC,EAAcD,EAAKE,iBAAmBF,EAAKG,WAAc,IAC7Df,EAAYa,MACb,SAACxC,GAAU6B,EAAS7B,KAJvB,sBAI+B,8BAAAd,EAAA,sEAEX8C,EAAWW,iBAFA,OAEvBb,EAFuB,OAGvBlC,EAAY,IAAIC,KACpBsC,EAAcS,IAAI,CAAEd,MAAK/B,UAAWH,EAAWsC,KAAMX,EAAKW,OAC1DH,EAAOD,GALoB,8CAOjC,CAACP,IAEI,CAACG,WAAUE,QAAOE,OCvBAe,CAAWtB,GAA7BG,EAD+B,EAC/BA,SAAUI,EADqB,EACrBA,IAYjB,OAVAX,oBAAS,sBAAC,sBAAAjC,EAAA,yDAEU,KAAZwC,IAAmBI,EAFjB,uBAGF7B,QAAQC,IAAI4B,GAHV,SAIIN,EAAQ,MAJZ,2CAMR,CAACM,IAEHX,qBAAW,WAAKlB,QAAQC,IAAIqB,KAAO,CAACA,IAGhC,sBACIH,UAAU,eACV0B,MAAO,CAAEC,MAAM,GAAD,OAAKrB,EAAL,MAFlB,UAGCsB,KAAKC,MAAMvB,GAHZ,Q,aCZO,SAASwB,EAAWrC,GAAQ,IAC/BsC,EAAmBtC,EAAnBsC,eACAC,EFuBgB,SAAChB,GAAgB,IAAD,EACFX,mBAAS,IADP,mBACjC2B,EADiC,KACpBC,EADoB,KAgBxC,OAbAlC,qBAAU,WACN,IAAMmC,EAAQ3E,EAAUyD,WAAWA,GAClCmB,QAAQ,YAAY,QACpBC,YAAW,SAACC,GACT,IAAIC,EAAiB,GACrBD,EAASE,SAAS,SAAAC,GACdF,EAAeG,KAAf,aAAsBC,GAAIF,EAAQE,IAAOF,EAAQG,YAEzDV,EAAeK,MAEf,OAAO,kBAAMJ,OACf,CAAClB,IAEI,CAAEgB,eEvCeY,CAAa,YAA7BZ,YAF8B,EAGR3B,mBAAS,MAHD,mBAG/BmC,EAH+B,KAGtBK,EAHsB,KAgBtC,OAXA9C,qBAAU,WACP,IAAI+C,EAAO,GACXd,EAAYO,SAAQ,SAAAQ,GAChBD,EAAKL,KAAKM,EAAIrC,QAEfoC,GAAQA,EAAKjG,SAAWmF,EAAYnF,QACnCgG,EAAWC,KAGhB,CAACd,IAGC,qBAAKhC,UAAW,WAAhB,SACKwC,GAAWA,EAAQ3F,SAAWmF,EAAYnF,QAAU2F,EAAQQ,KAAI,SAACC,EAAMC,GAAP,OACzD,cAAC,IAAOC,IAAR,CAEInD,UAAU,UACVC,QAAS,kBAAI8B,EAAekB,IAHhC,SAKI,qBAAKG,IAAKH,EAAMI,IAAG,kBAAaH,EAAE,MAJ7BA,Q,UCnBvB5D,EAAW,SAAC,GAAD,MAAa,CAC1BC,YADa,EAAEF,KACGE,cAGP,SAAS+D,EAAS7D,GAAQ,IAC7BF,EAAgBO,YAAYR,GAA5BC,YACAwC,EAAmBtC,EAAnBsC,eAF4B,EAGZ1B,mBAAS,MAHG,mBAG7BF,EAH6B,KAGvBC,EAHuB,OAIVC,mBAAS,MAJC,mBAI7BG,EAJ6B,KAItBC,EAJsB,KAOpCV,oBAAS,sBAAC,sBAAAjC,EAAA,iGAGR,CAACqC,IAEH,IAAMoD,EAAgB,CAAC,YAAY,aAAa,cAE1CC,EAAS,uCAAG,WAAOC,GAAP,eAAA3F,EAAA,uDACV4F,EAAeD,EAAEE,OAAOC,MAAM,KAEfL,EAAcM,SAASH,EAAaxE,OACnDkB,EAAQsD,GACRjD,EAAS,QAETL,EAAQ,MACRK,EAAS,8CARC,2CAAH,sDAWf,OACI,cAAC,WAAD,UACI,sBAAKT,UAAU,YAAf,UACI,sBAAKA,UAAU,QAAf,0BAEI,0FAEAT,GAAe,uBACXS,UAAU,aACVd,KAAK,OACL4E,SAAUN,IAEbhD,GACG,mBAAGR,UAAU,QAAb,SAAsBQ,IACzBL,GAAQ,eAAC,WAAD,WACL,mBAAGH,UAAU,YAAb,SAA0BG,EAAKW,OAC/B,cAAC,EAAD,CAAaX,KAAMA,EAAMC,QAASA,IAF7B,QAGPD,GACE,qBAAKH,UAAU,SAAf,SAA0B,SAGnC,cAAC8B,EAAD,CAAWC,eAAgBA,SCrD3B,SAASgC,EAAT,GAAgD,IAA/BC,EAA8B,EAA9BA,YAAajC,EAAiB,EAAjBA,eAKzC,OACI,qBAAK/B,UAAU,iBAAiBC,QALnB,SAACwD,GACVA,EAAEE,OAAOM,UAAUC,SAAS,mBAChCnC,EAAe,OAGf,SACI,qBAAKqB,IAAKY,EAAaX,IAAI,kBCNxB,SAASC,EAAS7D,GAAQ,IAAD,EACEY,mBAAS,MADX,mBAC7B2D,EAD6B,KAChBjC,EADgB,KAGpC,OACI,eAAC,WAAD,WACI,cAAC,EAAD,CACIA,eAAgBA,IACnBiC,GACD,cAACD,EAAD,CACIC,YAAaA,EACbjC,eAAgBA,O,+CCC1BzC,G,OAAW,SAAC,GAAD,MAAa,CAC1BC,YADa,EAAEF,KACGE,eAGhB4E,EAAWC,YAAW,CACxBC,QAAS,CACLC,aAAc,QAElBC,IAAK,GAELC,aAAc,CACV7C,MAAO,OACP8C,OAAQ,OACRC,QAAS,OACTC,aAAc,YAIhBC,EAAkB,SAAAnF,GAAU,IACtBoF,EAAUpF,EAAVoF,MACFC,EAAUX,IAFa,EAGPY,YAAStF,GAHF,mBAGtBuF,EAHsB,KAGfC,EAHe,KAK7B,OACI,cAAC,WAAD,UACI,cAACC,EAAA,EAAD,qCACIlF,UAAS,UAAK8E,EAAQT,SACtBQ,MAAOA,EACPM,KAAK,QACLC,QAAQ,YACJJ,GACAvF,GANR,IAOIe,MAAOyE,EAAKI,SAAWJ,EAAKzE,MAC5B8E,WAAaL,EAAKI,QAAUJ,EAAKzE,MAAQ,GAEzC+E,WAAS,QAKnBC,EAAe,SAAA/F,GAAU,IACnBgG,EAAyBhG,EAAzBgG,QAASC,EAAgBjG,EAAhBiG,MAAOxG,EAASO,EAATP,KAClB4F,EAAUX,IAChB,OACI,cAAC,WAAD,UACG,qBAAKnE,UAAS,UAAK8E,EAAQN,cAA3B,SACA,cAACmB,EAAA,EAAD,CACK3F,UAAS,UAAK8E,EAAQP,KACtBa,QAAQ,YACRM,MAAOA,EACPxG,KAAMA,EACNiG,KAAK,QALV,SAOMM,SASF,SAASG,EAAanG,GAAS,IAClCF,EAAgBO,YAAYR,GAA5BC,YACFI,EAAWE,cACDsE,IACAvE,cAEhBG,qBAAU,WACHR,GACCE,EAAMC,QAAQ,eAEpB,CAACH,IACHQ,qBAAU,WACHR,GACCE,EAAMC,QAAQ,eAEpB,IAEF,IAAMmG,EAAe,SAAC,GAAoC,IAAnCtH,EAAkC,EAAlCA,MAAOU,EAA2B,EAA3BA,SAAUX,EAAiB,EAAjBA,YACpCqB,ERvEmB,SAAC,GAAD,IAAEpB,EAAF,EAAEA,MAAOU,EAAT,EAASA,SAAUX,EAAnB,EAAmBA,YAAnB,MAAqC,CAC5DY,KAAMH,EACNI,QAAS,CAACZ,QAAOU,WAAUX,gBQqEdwH,CAAY,CAACvH,QAAOU,WAAUX,kBAG3C,OACI,cAAC,WAAD,UACI,sBAAK0B,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAf,+BAEA,cAAC,IAAD,CACI+F,cAAe,CACXzH,YAAa,GACbC,MAAO,GACPU,SAAU,GACV+G,gBAAiB,IAErBC,iBAAkBC,IAAW,CACzB5H,YAAa4H,MACRC,IAAI,EAAG,2BACPC,IAAI,GAAI,4BACRC,SAAS,YACd9H,MAAO2H,MACF3H,MAAM,iBACN8H,SAAS,YACdpH,SAAUiH,MACLC,IAAI,EAAG,2BACPC,IAAI,GAAI,2BACRC,SAAS,YACdL,gBAAiBE,MACZI,MAAM,CAACJ,IAAQ,aAAc,yBAC7BG,SAAS,cAElBE,SAAQ,uCAAG,WAAMC,EAAN,kBAAA1I,EAAA,6DAAe2I,EAAf,EAAeA,UAAf,SACGZ,EAAaW,GADhB,OAEHC,IACA5H,QAAQC,IAAIW,GAHT,2CAAH,wDAvBZ,SA6BK,SAAAA,GAAK,OACF,eAAC,IAAD,WACI,cAAC,EAAD,CACIP,KAAK,OACL4B,KAAK,cACL+D,MAAM,aAEV,cAAC,EAAD,CACI3F,KAAK,QACL4B,KAAK,QACL+D,MAAM,UAEV,cAAC,EAAD,CACI3F,KAAK,WACL4B,KAAK,WACL+D,MAAM,aAEV,cAAC,EAAD,CACI3F,KAAK,WACL4B,KAAK,kBACL+D,MAAM,qBAEV,cAAC,EAAD,CACC3F,KAAK,SACLuG,QAAQ,UACRC,MAAM,uBC1JpB,SAASgB,EAAQjH,GAE5B,OACI,8BACI,cAAC,EAAD,eAAgBA,MCM5B,IAAMH,EAAW,SAAC,GAAD,MAAa,CAC1BC,YADa,EAAEF,KACGE,cAGhB4E,EAAWC,YAAW,CACxBC,QAAS,CACLC,aAAc,QAElBC,IAAK,GAELC,aAAc,CACVmC,UAAW,SACXhF,MAAO,OACP8C,OAAQ,OACRC,QAAS,OACTC,aAAc,YAIhBC,EAAkB,SAAAnF,GAAU,IACtBoF,EAAUpF,EAAVoF,MADqB,EAEPE,YAAStF,GAFF,mBAEtBuF,EAFsB,KAEfC,EAFe,KAI7B,OACI,cAAC,WAAD,UACI,cAACC,EAAA,EAAD,qCACIlF,UAAS,GACT6E,MAAOA,EACPM,KAAK,QACLC,QAAQ,YACJJ,GACAvF,GANR,IAOIe,MAAOyE,EAAKI,SAAWJ,EAAKzE,MAC5B8E,WAAaL,EAAKI,QAAUJ,EAAKzE,MAAQ,GAEzC+E,WAAS,QAKnBC,EAAe,SAAA/F,GAAU,IACnBgG,EAAyBhG,EAAzBgG,QAASC,EAAgBjG,EAAhBiG,MAAOxG,EAASO,EAATP,KAClB4F,EAAUX,IAChB,OACI,cAAC,WAAD,UACG,qBAAKnE,UAAS,UAAK8E,EAAQN,cAA3B,SACA,cAACmB,EAAA,EAAD,CACK3F,UAAS,UAAK8E,EAAQP,KACtBa,QAAQ,YACRM,MAAOA,EACPxG,KAAMA,EACNiG,KAAK,QALV,SAOMM,SASF,SAASmB,EAAYnH,GAAS,IACjCF,EAAgBO,YAAYR,GAA5BC,YACFI,EAAWE,cAEXiF,GADUlF,cACAuE,KAEV0B,EAAY,uCAAG,+BAAA/H,EAAA,6DAAQS,EAAR,EAAQA,MAAOU,EAAf,EAAeA,SAAf,SACXU,EAASX,EAAW,CAACT,QAAOU,cADjB,2CAAH,sDAelB,OAXAc,qBAAU,WACHR,GACCE,EAAMC,QAAQ,eAEpB,CAACH,IACHQ,qBAAU,WACHR,GACCE,EAAMC,QAAQ,eAEpB,IAGE,cAAC,WAAD,UACI,sBAAKM,UAAU,OAAf,UACI,qBAAKA,UAAS,QAAd,mBACA,cAAC,IAAD,CACI+F,cAAe,CACXxH,MAAO,GACPU,SAAU,IAEdgH,iBAAkBC,IAAW,CACzB3H,MAAO2H,MACF3H,MAAM,iBACN8H,SAAS,YACdpH,SAAUiH,MACLC,IAAI,EAAG,2BACPC,IAAI,GAAI,2BACRC,SAAS,cAElBE,SAAQ,uCAAE,WAAOC,EAAP,kBAAA1I,EAAA,6DAAgB2I,EAAhB,EAAgBA,UAAhB,SACDZ,EAAaW,GADZ,OAEPC,IAFO,2CAAF,wDAdZ,SAmBK,SAAAhH,GAAK,OACF,eAAC,IAAD,WACI,cAAC,EAAD,CACIO,UAAS,UAAK8E,EAAQT,SACtBnF,KAAK,QACL4B,KAAK,QACL+D,MAAM,UAEV,cAAC,EAAD,CACI3F,KAAK,WACL4B,KAAK,WACL+D,MAAM,aACV,mBAAG7E,UAAU,uBACT6G,KAAK,kBADT,8BAIA,cAAC,EAAD,CACI3H,KAAK,SACLuG,QAAQ,QACRC,MAAM,yBCvIvB,SAASoB,GAAOrH,GAE3B,OACI,cAACmH,EAAD,eAAenH,ICwCRsH,OA/Bf,WAAgB,IAAD,EACW1G,mBAAS,aADpB,mBACN2G,EADM,KACAtH,EADA,KAQf,OANkBE,cAEhBG,qBAAU,WACRlB,QAAQC,IAAIkI,KACZ,CAACA,IAGC,sBAAKhH,UAAU,MAAf,UACA,cAACR,EAAD,CAAYE,QAASA,IACX,cAATsH,GACC,cAAC,WAAD,UACE,cAAC,EAAD,MAGM,WAATA,GAAqB,cAACF,GAAD,CAAOpH,QAASA,IAC5B,aAATsH,GAAuB,cAACN,EAAD,CAAQhH,QAASA,Q,SCpBhCuH,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,6BCLRQ,GAAe,CACjBnI,YAAa,MCAFoI,gBAAgB,CAC3BtI,KDEW,WAAwC,IAA/BuI,EAA8B,uDAAtBF,GAAcG,EAAQ,uCAClD,OAAOA,EAAO3I,MACV,KAAKH,EACL,OAAO,2BACA6I,GADP,IAEIrI,YAAasI,EAAO1I,UAExB,KAAKJ,EACL,OAAO,2BACA6I,GADP,IAEIrI,YAAa,OAEjB,QAAS,OAAOqI,M,qBEbPE,I,YAcAC,I,YAMAC,I,YAKAC,I,YAOAC,I,YAKAC,I,YAQAC,I,YAKAC,I,YAMAC,I,YAIQC,IA5DlB,SAAUT,GAA2B/J,EAAUC,GAA/C,yEAEiB,OAFjB,kBAEuBwK,aAAK3K,EAAe,CAAEE,WAAUC,mBAFvD,OAGc,OADPE,EAFP,gBAGoBA,EAAQE,MAH5B,OAIC,OADMiB,EAHP,gBAIO4B,aACF7B,EAAa,aACTsD,GAAIrD,EAAKqD,IACNrD,EAAKsD,UAPjB,yDAUa9D,QAAQC,IAAR,MAVb,uDAcA,SAAUiJ,GAAV,kFAEkB,OAFlB,IAAwB5I,QAAUZ,EAAlC,EAAkCA,MAAOU,EAAzC,EAAyCA,SAAzC,kBAEwB3B,EAAKmL,2BAA2BlK,EAAOU,GAF/D,OAGC,OAHD,SAESI,EAFT,EAESA,KAFT,SAGOyI,GAA2BzI,GAHlC,yDAIaR,QAAQC,IAAR,MAJb,uDAMA,SAAUkJ,KAAV,iEACH,OADG,SACGU,aAAW3J,EAAyBgJ,IADvC,wCAKA,SAAUE,GAAV,oFAGkB,OAHlB,IAAwB9I,QAAUZ,EAAlC,EAAkCA,MAAOU,EAAzC,EAAyCA,SAAUX,EAAnD,EAAmDA,YAAnD,SAECO,QAAQC,IAAI,uBAFb,SAGwBxB,EAAKqL,+BAA+BpK,EAAOU,GAHnE,OAIC,OAJD,SAGSI,EAHT,EAGSA,KAHT,SAIOyI,GAA2BzI,EAAM,CAACf,gBAJzC,yDAKaO,QAAQC,IAAR,MALb,uDAOA,SAAUoJ,KAAV,iEACH,OADG,SACGQ,aAAW3J,EAA2BkJ,IADzC,wCAKA,SAAUE,KAAV,uEAGc,OAHd,SAECtJ,QAAQC,IAAI,4BAFb,SnBOI,IAAI8J,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAczL,EAAK0L,oBAAoB,SAAA3J,GACzC0J,IACAF,EAAQxJ,KACTyJ,MmBXJ,UAGOzJ,EAHP,wDAKC,OALD,SAKOyI,GAA2BzI,GALlC,yDAMaR,QAAQC,IAAR,MANb,uDAQA,SAAUsJ,KAAV,iEACH,OADG,SACGM,aAAW3J,EAAgCoJ,IAD9C,wCAKA,SAAUE,KAAV,iEAEC,OAFD,kBAEO/K,EAAK2L,UAFZ,OAGC,OAHD,SAGOhI,ahB3CsB,CAChC/B,KAAMH,IgBuCH,uDAIaF,QAAQC,IAAR,MAJb,sDAMA,SAAUwJ,KAAV,iEACH,OADG,SACGI,aAAW3J,EAA0BsJ,IADxC,wCAIQ,SAAUE,KAAV,iEACX,OADW,SACLW,aAAI,CACNV,aAAKR,IACLQ,aAAKN,IACLM,aAAKF,IACLE,aAAKJ,MALE,wC,gBC9DUe,IAAV,SAAUA,KAAV,iEACX,OADW,SACLD,aAAI,CACNV,aAAKD,MAFE,wCCGf,IAEMa,GAAiBC,eACjBC,GAAa,CAACF,GAAgBG,MAE9BC,GAAQC,aACVC,GANiB,GAQjBC,aACIC,KAAe,WAAf,EAAmBN,IACnBO,OAAOC,8BAAgCD,OAAOC,iCAItDV,GAAeW,IAAIC,IAEJR,UCZfS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOY,GAAjB,SACE,cAAC,KAAD,UACE,cAAC,GAAD,UAINC,SAASC,eAAe,SAM1BrD,M","file":"static/js/main.034d9164.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\nimport 'firebase/firestore'\r\nimport { firebaseConfig } from './config'\r\nimport { useState, useEffect } from 'react'\r\n\r\n// initialize App \r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig)\r\n} else { firebase.app() }\r\n\r\n// export Auth, Firestore, Storage\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\nexport const storage = firebase.storage()\r\n\r\n// Google Auth Provider SignIn\r\nconst GoogleAPI = new firebase.auth.GoogleAuthProvider()\r\nGoogleAPI.setCustomParameters({ prompt: 'select_account' })\r\nexport const signInWithGoogle = () => auth.signInWithPopup(GoogleAPI)\r\n\r\n// Store / Query User Data\r\nexport const handleProfile = async ({userAuth, additionalData}) => {\r\n    if(!userAuth) { return } else {\r\n        // Take uid from userAuth (Google sign-in)\r\n        const { uid } = userAuth\r\n        const userRef = firestore.doc(`users/${uid}`)\r\n        // Check if user exists\r\n        const user = await userRef.get()\r\n        if(!user.exists) {\r\n            // if user doesn't exist yet, create one using userAuth information\r\n            const { displayName, email } = userAuth\r\n            const timestamp = new Date()\r\n            try {\r\n                // Create User\r\n                userRef.set({\r\n                    displayName,\r\n                    email,\r\n                    createdAt: timestamp,\r\n                    ...additionalData,\r\n                })\r\n            } catch (err) { console.log(err) }\r\n        } return userRef\r\n    }\r\n}\r\n\r\n// User Session Check\r\nexport const getCurrentUser = () => {\r\n    return new Promise((resolve, reject) => {\r\n        const unsubscribe = auth.onAuthStateChanged( user => {\r\n            unsubscribe()\r\n            resolve(user)\r\n        }, reject)\r\n    })\r\n}\r\n\r\n\r\n// Storage \r\nexport const StoreImg = (file) => {\r\n    const [progress, setProgress] = useState(0)\r\n    const [error, setError] = useState(null)\r\n    const [url, setUrl] = useState(null)\r\n    \r\n    useEffect(()=>{\r\n        // Set Ref\r\n        const storageRef = storage.ref(file.name)\r\n        // Put File in the firebase storage\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage)\r\n        }, (err)=>{\r\n            setError(err)\r\n        }, async () => {\r\n            // get url of image\r\n            const url = await storageRef.getDownloadURL()\r\n            setUrl(url)\r\n        })\r\n    },[file])\r\n    return { progress, url, error }\r\n}\r\n","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyCZsZBNOXiMRN1MEpIA5XW2M5coXBwNlkk\",\r\n    authDomain: \"firegram-efff5.firebaseapp.com\",\r\n    projectId: \"firegram-efff5\",\r\n    storageBucket: \"firegram-efff5.appspot.com\",\r\n    messagingSenderId: \"1047659849338\",\r\n    appId: \"1:1047659849338:web:480fc244086afd36b27dc3\"\r\n  };\r\n","export const authActions = {\r\n    LOGIN_START: 'LOGIN_START',\r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    SIGN_UP_START: 'SIGN_UP_START',\r\n    SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\r\n    CHECK_USER_SESSION: 'CHECK_USER_SESSION',\r\n    LOGOUT_START: 'LOGOUT_START',\r\n    LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\r\n}","import { authActions } from '../Types'\r\n\r\nexport const loginStart = ({ email, password}) => ({\r\n    type: authActions.LOGIN_START,\r\n    payload: {email, password}\r\n})\r\n\r\nexport const loginSuccess = (user) => ({\r\n    type: authActions.LOGIN_SUCCESS,\r\n    payload: user\r\n})\r\n\r\nexport const logout = () => ({\r\n    type: authActions.LOGOUT_START,\r\n})\r\nexport const logoutSuccess = () => ({\r\n    type: authActions.LOGOUT_SUCCESS,\r\n})\r\n\r\n// export const signUpStart = ({email, password, displayName}) => ({\r\n//     type: authActions.SIGN_UP_START,\r\n//     payload: { email, password, displayName }\r\n// })\r\n\r\nexport const signUpStart = ({email, password, displayName}) => ({\r\n    type: authActions.SIGN_UP_START,\r\n    payload: {email, password, displayName},\r\n})\r\n\r\nexport const checkUserSession = () => ({\r\n    type: authActions.CHECK_USER_SESSION,\r\n})","import React, { Fragment, useEffect } from 'react'\r\nimport { auth } from '../../firebase/utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './style.scss'\r\n// Redux \r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { checkUserSession, logout } from '../../redux/Actions'\r\nconst mapState = ({user}) => ({\r\n    currentUser: user.currentUser\r\n})\r\n\r\nexport default function Nav (props) {\r\n    const { setPage } = props \r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const { currentUser } = useSelector(mapState)\r\n\r\n    const handleClick =async(page) => {\r\n       await setPage(page)\r\n    }\r\n\r\n    useEffect(()=>{\r\n       dispatch(checkUserSession())\r\n    },[])\r\n    \r\n    return (\r\n        <div className=\"navigation\">\r\n            <div className=\"nav-container\">\r\n                <div className=\"logo\" onClick={()=>setPage('/firegram')}>\r\n                    Firegram\r\n                </div>\r\n                <div className=\"links\">\r\n                   { !currentUser && (\r\n                    <Fragment>\r\n                        <span onClick={()=>setPage('/login')}>Login</span>\r\n                        <span onClick={()=>setPage('/sign-up')} >SignUp</span>\r\n                    </Fragment>\r\n                   )}\r\n                   {currentUser && (\r\n                    <Fragment>\r\n                      <span onClick={()=>console.log('profile-page')} >{currentUser.displayName}</span>\r\n                      <span onClick={()=>dispatch(logout())}>Logout</span>\r\n                    </Fragment>\r\n                   )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n","import React, { useState, useEffect } from 'react'\r\nimport { firestore, storage } from '../firebase/utils'\r\n\r\nexport const useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0)\r\n    const [error, setError] = useState(null)\r\n    const [url, setUrl] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        // Set Refs \r\n        const storageRef = storage.ref(file.name)\r\n        const collectionRef = firestore.collection('pictures')\r\n\r\n        // Put File in Storage\r\n        storageRef.put(file).on('state_changed',(snap)=>{\r\n            // Percentage\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100\r\n            setProgress(percentage)\r\n        }, (err) => { setError(err) }, async () => {\r\n            // Get URl \r\n            let url = await storageRef.getDownloadURL()\r\n            let timestamp = new Date()\r\n            collectionRef.add({ url, createdAt: timestamp, name: file.name, })\r\n            setUrl(url)\r\n        })\r\n    },[file])\r\n\r\n    return {progress, error, url}\r\n}\r\n\r\nexport const useFirestore = (collection) => {\r\n    const [pictureList, setPictureList] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const unsub = firestore.collection(collection)\r\n        .orderBy('createdAt','desc')\r\n        .onSnapshot((pictures)=>{\r\n            let listOfPictures = []\r\n            pictures.forEach((picture=>{\r\n                listOfPictures.push({ id: picture.id, ...picture.data() })\r\n            }))\r\n        setPictureList(listOfPictures)\r\n        })\r\n        return () => unsub()\r\n    },[collection])\r\n\r\n    return { pictureList }\r\n}","import React, { useEffect } from 'react'\r\nimport {useStorage} from '../../hooks'\r\n\r\nconst ProgressBar = ({ file, setFile}) => {\r\n   const { progress, url } = useStorage(file)\r\n\r\n    useEffect(async()=>{\r\n        // set File to null when upload finishes\r\n        if (progress == 100 && url) {\r\n            console.log(url)\r\n            await setFile(null)\r\n        }\r\n    },[url])\r\n\r\n    useEffect (()=>{console.log(file)},[file])\r\n\r\n    return(\r\n        <div \r\n            className=\"progress-bar\" \r\n            style={{ width: `${progress}%` }}>\r\n        {Math.round(progress)}%</div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar ","import React, { useState, useEffect } from 'react'\r\nimport Image from './image'\r\nimport { motion } from 'framer-motion'\r\nimport { useFirestore } from '../../hooks'\r\n\r\nexport default function ImageGrid (props) {\r\n    const { setSelectedImg } = props\r\n    const { pictureList } = useFirestore('pictures')\r\n    const [picture, setPicture] = useState(null)\r\n\r\n    useEffect(()=>{\r\n       let list = []\r\n       pictureList.forEach(pic => {\r\n           list.push(pic.url)\r\n       })\r\n       if(list && list.length === pictureList.length) {\r\n           setPicture(list)\r\n       }\r\n      \r\n    },[pictureList])\r\n\r\n    return (\r\n        <div className =\"pictures\">\r\n            {picture && picture.length === pictureList.length && picture.map((link, i)=> (\r\n                    <motion.div  \r\n                        key={i}          \r\n                        className=\"picture\"\r\n                        onClick={()=>setSelectedImg(link)}\r\n                    >\r\n                        <img src={link} alt={`pic no. ${i+1}`}/>\r\n                    </motion.div>\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React, { Fragment, useState, useEffect } from 'react'\r\nimport ProgressBar from './progressBar'\r\nimport ImageGrid from './imageGrid'\r\nimport './style.scss'\r\n// Redux \r\nimport { useSelector } from 'react-redux'\r\nconst mapState = ({user}) => ({\r\n    currentUser: user.currentUser,\r\n})\r\n\r\nexport default function Profile (props) {\r\n    const { currentUser } = useSelector(mapState)\r\n    const { setSelectedImg } = props\r\n    const [file, setFile] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n\r\n    useEffect(async ()=>{\r\n        if(file) {\r\n        }\r\n    },[file])\r\n\r\n    const acceptedFiles = ['image/png','image/jpeg','image/jpeg']\r\n\r\n    const uploadImg = async (e) => {\r\n        let selectedFile = e.target.files[0]\r\n        \r\n        if(selectedFile && acceptedFiles.includes(selectedFile.type)) { \r\n            setFile(selectedFile)\r\n            setError(null)\r\n        } else {\r\n            setFile(null)\r\n            setError('Please select an image file(png/jpg/jpeg)')\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"title\">\r\n                        Your Pictures\r\n                    <p>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>\r\n                   {currentUser && <input \r\n                        className=\"upload-btn\" \r\n                        type=\"file\" \r\n                        onChange={uploadImg} \r\n                        />}\r\n                    {error && \r\n                        <p className=\"error\">{error}</p>}\r\n                    {file && <Fragment>\r\n                        <p className=\"file-name\">{file.name}</p>\r\n                        <ProgressBar file={file} setFile={setFile} /> </Fragment>}\r\n                    {!file && \r\n                        <div className=\"spacer\" >{\" \"}</div>}\r\n                </div>\r\n\r\n               <ImageGrid setSelectedImg={setSelectedImg}/>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React from 'react'\r\nimport './style.scss'\r\n\r\nexport default function Modal ({selectedImg, setSelectedImg}) {\r\n    const unselect = (e) => {\r\n        if (e.target.classList.contains('modal-backdrop'))\r\n        setSelectedImg(null)\r\n    }\r\n    return (\r\n        <div className=\"modal-backdrop\" onClick={unselect}>\r\n            <img src={selectedImg} alt=\"selectedImg\" />\r\n        </div>\r\n    )\r\n}","import React, { Fragment, useState } from 'react'\r\nimport Grid from '../../components/profile'\r\nimport Modal from '../../components/profile/modal'\r\n\r\nexport default function Profile (props) {\r\n    const [selectedImg, setSelectedImg] = useState(null)\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid \r\n                setSelectedImg={setSelectedImg}/>\r\n            {selectedImg && \r\n            <Modal \r\n                selectedImg={selectedImg} \r\n                setSelectedImg={setSelectedImg} />}\r\n        </Fragment>\r\n    )\r\n}","import React, { Fragment, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// Form Components\r\nimport { Formik, useField, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\n// Styling Components\r\nimport { Button, TextField } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport './style.scss'\r\n\r\n// Redux \r\nimport { signUpStart } from '../../redux/Actions' \r\nimport { useDispatch, useSelector } from 'react-redux'\r\nconst mapState = ({user}) => ({\r\n    currentUser: user.currentUser\r\n})\r\n\r\nconst useStyle = makeStyles({\r\n    margins: {\r\n        marginBottom: \"1rem\",\r\n    },\r\n    btn: {\r\n    },\r\n    btnContainer: {\r\n        width: \"100%\",\r\n        height: \"auto\",\r\n        display: 'grid',\r\n        justifyItems: 'center',\r\n    },\r\n})\r\n\r\nconst CustomTextField = props => {\r\n    const { label } = props\r\n    const classes = useStyle()\r\n    const [field, meta] = useField(props)\r\n    \r\n    return(\r\n        <Fragment>\r\n            <TextField\r\n                className={`${classes.margins}`}\r\n                label={label}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                {...field}\r\n                {...props}\r\n                error={meta.touched && meta.error}\r\n                helperText={ meta.touched ? meta.error : '' }\r\n\r\n                fullWidth />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst CustomButton = props => {\r\n    const { content, color, type } = props\r\n    const classes = useStyle()\r\n    return (\r\n        <Fragment>\r\n           <div className={`${classes.btnContainer}`}>\r\n           <Button\r\n                className={`${classes.btn}`}\r\n                variant=\"contained\"\r\n                color={color}\r\n                type={type}\r\n                size=\"small\"\r\n                 >\r\n                {content}\r\n            </Button>\r\n           </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default function SignInForm ( props ) {\r\n    const { currentUser } = useSelector(mapState)\r\n    const dispatch = useDispatch()\r\n    const classes = useStyle()\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        if(currentUser) {\r\n            props.setPage('/firegram')\r\n        }\r\n    },[currentUser])\r\n    useEffect(() => {\r\n        if(currentUser){\r\n            props.setPage('/firegram')\r\n        }\r\n    },[])\r\n\r\n    const handleSubmit = ({email, password, displayName}) => {\r\n        dispatch(signUpStart({email, password, displayName}))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card\">\r\n                <div className=\"title\">\r\n                    Create an Account</div>\r\n                <Formik\r\n                    initialValues={{\r\n                        displayName: '',\r\n                        email: '',\r\n                        password: '',\r\n                        confirmPassword: ''\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        displayName: Yup.string()\r\n                            .min(6, 'Minimum of 6 characters')\r\n                            .max(20, 'Maximum of 20 characters')\r\n                            .required('Required'),\r\n                        email: Yup.string()\r\n                            .email('Invalid Email')\r\n                            .required('Required'),\r\n                        password: Yup.string()\r\n                            .min(3, 'Minimum of 3 characters')\r\n                            .max(20, 'Maximum of 20 chracters')\r\n                            .required('Required'),\r\n                        confirmPassword: Yup.string()\r\n                            .oneOf([Yup.ref('password')], \"passwords don't match\")\r\n                            .required('Required'),          \r\n                    })}\r\n                    onSubmit={ async(values, {resetForm}) => {\r\n                            await handleSubmit(values)\r\n                            resetForm()\r\n                            console.log(props)\r\n                        }}\r\n                >\r\n                    {props=>(\r\n                        <Form>\r\n                            <CustomTextField \r\n                                type=\"text\"\r\n                                name=\"displayName\"\r\n                                label=\"Username\" />\r\n\r\n                            <CustomTextField \r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                label=\"Email\" />\r\n\r\n                            <CustomTextField \r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                label=\"Password\" />\r\n\r\n                            <CustomTextField \r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n                                label=\"Confirm Password\" />\r\n\r\n                            <CustomButton \r\n                             type=\"submit\"\r\n                             content=\"Sign up\"\r\n                             color=\"primary\" />\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport SignUnForm from '../../components/signUpForm'\r\n\r\nexport default function SignUp (props) {\r\n\r\n    return (\r\n        <div>\r\n            <SignUnForm {...props} />\r\n        </div>\r\n    )\r\n}","import React, { Fragment, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// Form Components\r\nimport { Formik, useField, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\n// Styling Components\r\nimport { Button, TextField } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles' \r\n// Redux \r\nimport { loginStart } from '../../redux/Actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nconst mapState = ({user}) => ({\r\n    currentUser: user.currentUser,\r\n})\r\n\r\nconst useStyle = makeStyles({\r\n    margins: {\r\n        marginBottom: \"1rem\",\r\n    },\r\n    btn: {\r\n    },\r\n    btnContainer: {\r\n        marginTop: '0.5rem',\r\n        width: \"100%\",\r\n        height: \"auto\",\r\n        display: 'grid',\r\n        justifyItems: 'center',\r\n    },\r\n})\r\n\r\nconst CustomTextField = props => {\r\n    const { label } = props\r\n    const [field, meta] = useField(props)\r\n    \r\n    return(\r\n        <Fragment>\r\n            <TextField\r\n                className={``}\r\n                label={label}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                {...field}\r\n                {...props}\r\n                error={meta.touched && meta.error}\r\n                helperText={ meta.touched ? meta.error : '' }\r\n\r\n                fullWidth />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst CustomButton = props => {\r\n    const { content, color, type } = props\r\n    const classes = useStyle()\r\n    return (\r\n        <Fragment>\r\n           <div className={`${classes.btnContainer}`}>\r\n           <Button\r\n                className={`${classes.btn}`}\r\n                variant=\"contained\"\r\n                color={color}\r\n                type={type}\r\n                size=\"small\"\r\n                 >\r\n                {content}\r\n            </Button>\r\n           </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default function LoginForm ( props ) {\r\n    const { currentUser } = useSelector(mapState)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const classes = useStyle()\r\n\r\n    const handleSubmit = async ({email, password}) => {\r\n        await dispatch(loginStart({email, password}))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(currentUser) {\r\n            props.setPage('/firegram')\r\n        }\r\n    },[currentUser])\r\n    useEffect(() => {\r\n        if(currentUser){\r\n            props.setPage('/firegram')\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card\">\r\n                <div className={`title`}>Login</div> \r\n                <Formik\r\n                    initialValues={{\r\n                        email: '',\r\n                        password: '',\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        email: Yup.string()\r\n                            .email('Invalid Email')\r\n                            .required('Required'),\r\n                        password: Yup.string()\r\n                            .min(3, 'Minimum of 3 characters')\r\n                            .max(20, 'Maximum of 20 chracters')\r\n                            .required('Required'),     \r\n                    })}\r\n                    onSubmit={async (values, {resetForm})=>{\r\n                       await handleSubmit(values)\r\n                       resetForm()                      \r\n                    }}\r\n                >\r\n                    {props=>(\r\n                        <Form>\r\n                            <CustomTextField \r\n                                className={`${classes.margins}`}\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                label=\"Email\" />\r\n\r\n                            <CustomTextField \r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                label=\"Password\" />\r\n                            <a className=\"forgot-password-link\" \r\n                                href=\"forgot-password\">\r\n                                Forgot Password?</a>\r\n\r\n                            <CustomButton \r\n                                type=\"submit\"\r\n                                content=\"Login\"\r\n                                color=\"secondary\" />\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport LoginForm from '../../components/loginForm' \r\n\r\nexport default function Login (props) {\r\n\r\n    return (\r\n        <LoginForm {...props}/>\r\n    )\r\n} ","import React, { useEffect, useState, Fragment } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport './App.css';\nimport { Switch, Route, Router } from 'react-router-dom'\n\n// Layouts\nimport MainLayout from './layouts/MainLayout'\nimport Navigation from './components/navigation'\n\n// Pages\nimport Profile from './pages/profile'\nimport SignUp from './pages/sign-up'\nimport Login from './pages/login'\n\n\nfunction App() {\n  const [page, setPage] = useState('/firegram')\n  const history = useHistory()\n\n  useEffect(() => {\n    console.log(page)\n  },[page])\n\nreturn (\n      <div className=\"App\">   \n      <Navigation setPage={setPage} /> \n      {page === '/firegram' && (\n        <Fragment>\n          <Profile />\n        </Fragment>\n      )}\n      {page === '/login' && <Login setPage={setPage} />}\n      {page === '/sign-up' && <SignUp setPage={setPage} />}\n\n        {/* <Switch>\n          <Route exact path='/firegram' render={()=>( <MainLayout>\n            <Profile /> </MainLayout> )} />\n          <Route exact path='/login' render={()=>( <MainLayout>\n            <Login /> </MainLayout> )} />\n          <Route exact path='/sign-up' render={()=>( <MainLayout>\n            <SignUp /> </MainLayout> )} />\n        </Switch> */}\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { authActions } from '../Types'\r\n\r\nconst initialState = {\r\n    currentUser: null,\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case authActions.LOGIN_SUCCESS: \r\n        return {\r\n            ...state,\r\n            currentUser: action.payload\r\n        }\r\n        case authActions.LOGOUT_SUCCESS: \r\n        return {\r\n            ...state,\r\n            currentUser: null,\r\n        }\r\n        default: return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport authReducer from './authReducer'\r\n\r\nexport default combineReducers({\r\n    user: authReducer,\r\n})\r\n    \r\n","import { authActions, LOGOUT } from '../Types'\r\nimport { takeLatest, all, call, put } from 'redux-saga/effects'\r\nimport { auth, handleProfile, getCurrentUser } from '../../firebase/utils'\r\nimport { loginSuccess, logoutSuccess } from '../Actions'\r\n\r\nexport function* getUserDataFromFirestoreDB(userAuth, additionalData) {\r\n    try {\r\n        const userRef = yield call(handleProfile, { userAuth, additionalData })\r\n        const user = yield userRef.get()\r\n        yield put( \r\n            loginSuccess({\r\n                id: user.id,\r\n                ...user.data()\r\n            })\r\n        )\r\n    } catch (err) { console.log(err) }\r\n}\r\n\r\n// Login\r\nexport function* emailLogin ({ payload: {email, password} }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\r\n        yield getUserDataFromFirestoreDB(user)\r\n    } catch (err) { console.log(err) }\r\n} \r\nexport function* onEmailSignIn () {\r\n    yield takeLatest(authActions.LOGIN_START, emailLogin)\r\n}\r\n\r\n// User sign up\r\nexport function* createUser ({ payload: {email, password, displayName} }) {\r\n    try {\r\n        console.log('authSaga/createUser')\r\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password)\r\n        yield getUserDataFromFirestoreDB(user, {displayName} )\r\n    } catch (err) { console.log(err) }\r\n}\r\nexport function* onUserSignUp () {\r\n    yield takeLatest(authActions.SIGN_UP_START, createUser)\r\n}\r\n\r\n// Check for logged-in user\r\nexport function* isAuthenticated () {\r\n    try {\r\n        console.log('authSaga/isAuthenticated')\r\n        const user = yield getCurrentUser()\r\n        if(!user) return\r\n        yield getUserDataFromFirestoreDB(user)\r\n    } catch (err) { console.log(err) }\r\n}\r\nexport function* onCheckUserSession () {\r\n    yield takeLatest(authActions.CHECK_USER_SESSION, isAuthenticated)\r\n}\r\n\r\n// Logout \r\nexport function* logout () {\r\n    try {\r\n        yield auth.signOut()\r\n        yield put(logoutSuccess())\r\n    } catch (err) { console.log(err) }\r\n}\r\nexport function* onLogout () {\r\n    yield takeLatest(authActions.LOGOUT_START, logout)\r\n}\r\n\r\nexport default function* authSaga () {\r\n    yield all([\r\n        call(onEmailSignIn),\r\n        call(onUserSignUp),\r\n        call(onLogout),\r\n        call(onCheckUserSession),\r\n    ])\r\n}","import { all, call } from 'redux-saga/effects'\r\nimport authSaga from './authSaga'\r\n\r\nexport default function* Sagas () {\r\n    yield all([\r\n        call(authSaga),\r\n        // call(postSaga)\r\n    ])\r\n}","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport thunk from 'redux-thunk'\r\nimport Reducer from './Reducers'\r\nimport Saga from './Saga'\r\n\r\nconst initialState = {}\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middleware = [sagaMiddleware, thunk]\r\n\r\nconst store = createStore(\r\n    Reducer, \r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\nsagaMiddleware.run(Saga)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\n// Redux \nimport { Provider } from 'react-redux'\nimport Store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}