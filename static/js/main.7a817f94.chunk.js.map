{"version":3,"sources":["components/navigation/index.js","firebase/utils.js","firebase/config.js","components/profile/progressBar.js","hooks/index.js","components/profile/imageGrid.js","components/profile/index.js","components/profile/modal.js","pages/profile/index.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","className","href","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","storage","GoogleAPI","GoogleAuthProvider","setCustomParameters","prompt","ProgressBar","file","setFile","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","timestamp","Date","add","createdAt","useStorage","console","log","style","width","Math","round","ImageGrid","setSelectedImg","pictureList","setPictureList","unsub","orderBy","onSnapshot","pictures","listOfPictures","forEach","picture","push","id","data","useFirestore","setPicture","list","pic","map","link","i","div","onClick","src","alt","Profile","acceptedFiles","uploadImg","e","selectedFile","target","files","includes","type","onChange","Modal","selectedImg","classList","contains","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a817f94.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.scss'\r\n\r\nexport default function Nav (props) { \r\n    return (\r\n        <div className=\"navigation\">\r\n            <div className=\"nav-container\">\r\n                <div className=\"logo\">\r\n                    Firegram\r\n                </div>\r\n                <div className=\"links\">\r\n                    <a href=\"#\">Login</a>\r\n                    <a href=\"#\">SignUp</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\nimport 'firebase/firestore'\r\nimport { firebaseConfig } from './config'\r\nimport { useState, useEffect } from 'react'\r\n\r\n// initialize App \r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig)\r\n} else { firebase.app() }\r\n\r\n// export Auth, Firestore, Storage\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\nexport const storage = firebase.storage()\r\n\r\n// Google Auth Provider SignIn\r\nconst GoogleAPI = new firebase.auth.GoogleAuthProvider()\r\nGoogleAPI.setCustomParameters({ prompt: 'select_account' })\r\nexport const signInWithGoogle = () => auth.signInWithPopup(GoogleAPI)\r\n\r\n//handleProfile \r\nexport const handleProfile = async (userAuth, additionalData) =>{\r\n    if (!userAuth) { return }\r\n    // take UID from userAuth (Google Sign In credentials)\r\n    const { uid } = userAuth\r\n    const userRef = firestore.doc(`users/${uid}`)\r\n    // Check if user exists on firestore DB\r\n    const user = await userRef.get()\r\n    if (!user.exists) {\r\n        // if user doesn't exist create one using Google Sign In Data\r\n        const { displayName, email } = userAuth\r\n        const timestamp = new Date()\r\n\r\n        try { \r\n            // Create user \r\n            userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt: timestamp,\r\n                ...additionalData,\r\n            })\r\n        } catch (err) { console.log(err) }\r\n    }\r\n    return userRef\r\n}\r\n\r\n// Storage \r\nexport const StoreImg = (file) => {\r\n    const [progress, setProgress] = useState(0)\r\n    const [error, setError] = useState(null)\r\n    const [url, setUrl] = useState(null)\r\n    \r\n    useEffect(()=>{\r\n        // Set Ref\r\n        const storageRef = storage.ref(file.name)\r\n        // Put File in the firebase storage\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage)\r\n        }, (err)=>{\r\n            setError(err)\r\n        }, async () => {\r\n            // get url of image\r\n            const url = await storageRef.getDownloadURL()\r\n            setUrl(url)\r\n        })\r\n    },[file])\r\n    return { progress, url, error }\r\n}\r\n","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyCZsZBNOXiMRN1MEpIA5XW2M5coXBwNlkk\",\r\n    authDomain: \"firegram-efff5.firebaseapp.com\",\r\n    projectId: \"firegram-efff5\",\r\n    storageBucket: \"firegram-efff5.appspot.com\",\r\n    messagingSenderId: \"1047659849338\",\r\n    appId: \"1:1047659849338:web:480fc244086afd36b27dc3\"\r\n  };\r\n","import React, { useEffect } from 'react'\r\nimport {useStorage} from '../../hooks'\r\n\r\nconst ProgressBar = ({ file, setFile}) => {\r\n   const { progress, url } = useStorage(file)\r\n\r\n    useEffect(async()=>{\r\n        // set File to null when upload finishes\r\n        if (progress == 100 && url) {\r\n            console.log(url)\r\n            await setFile(null)\r\n        }\r\n    },[url])\r\n\r\n    useEffect (()=>{console.log(file)},[file])\r\n\r\n    return(\r\n        <div \r\n            className=\"progress-bar\" \r\n            style={{ width: `${progress}%` }}>\r\n        {Math.round(progress)}%</div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar ","import React, { useState, useEffect } from 'react'\r\nimport { firestore, storage } from '../firebase/utils'\r\n\r\nexport const useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0)\r\n    const [error, setError] = useState(null)\r\n    const [url, setUrl] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        // Set Refs \r\n        const storageRef = storage.ref(file.name)\r\n        const collectionRef = firestore.collection('pictures')\r\n\r\n        // Put File in Storage\r\n        storageRef.put(file).on('state_changed',(snap)=>{\r\n            // Percentage\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100\r\n            setProgress(percentage)\r\n        }, (err) => { setError(err) }, async () => {\r\n            // Get URl \r\n            let url = await storageRef.getDownloadURL()\r\n            let timestamp = new Date()\r\n            collectionRef.add({ url, createdAt: timestamp, name: file.name, })\r\n            setUrl(url)\r\n        })\r\n    },[file])\r\n\r\n    return {progress, error, url}\r\n}\r\n\r\nexport const useFirestore = (collection) => {\r\n    const [pictureList, setPictureList] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const unsub = firestore.collection(collection)\r\n        .orderBy('createdAt','desc')\r\n        .onSnapshot((pictures)=>{\r\n            let listOfPictures = []\r\n            pictures.forEach((picture=>{\r\n                listOfPictures.push({ id: picture.id, ...picture.data() })\r\n            }))\r\n        setPictureList(listOfPictures)\r\n        })\r\n        return () => unsub()\r\n    },[collection])\r\n\r\n    return { pictureList }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Image from './image'\r\nimport { motion } from 'framer-motion'\r\nimport { useFirestore } from '../../hooks'\r\n\r\nexport default function ImageGrid (props) {\r\n    const { setSelectedImg } = props\r\n    const { pictureList } = useFirestore('pictures')\r\n    const [picture, setPicture] = useState(null)\r\n\r\n    useEffect(()=>{\r\n       let list = []\r\n       pictureList.forEach(pic => {\r\n           list.push(pic.url)\r\n       })\r\n       if(list && list.length === pictureList.length) {\r\n           setPicture(list)\r\n       }\r\n      \r\n    },[pictureList])\r\n\r\n    return (\r\n        <div className =\"pictures\">\r\n            {picture && picture.length === pictureList.length && picture.map((link, i)=> (\r\n                    <motion.div  \r\n                        key={link.id}          \r\n                        className=\"picture\"\r\n                        onClick={()=>setSelectedImg(link)}\r\n                    >\r\n                        <img src={link} alt={`pic no. ${i+1}`}/>\r\n                    </motion.div>\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React, { Fragment, useState, useEffect } from 'react'\r\nimport ProgressBar from './progressBar'\r\nimport ImageGrid from './imageGrid'\r\nimport './style.scss'\r\n\r\nexport default function Profile (props) {\r\n    const { setSelectedImg } = props\r\n    const [file, setFile] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n\r\n    useEffect(async ()=>{\r\n        if(file) {\r\n        }\r\n    },[file])\r\n\r\n    const acceptedFiles = ['image/png','image/jpeg','image/jpeg']\r\n\r\n    const uploadImg = async (e) => {\r\n        let selectedFile = e.target.files[0]\r\n        \r\n        if(selectedFile && acceptedFiles.includes(selectedFile.type)) { \r\n            setFile(selectedFile)\r\n            setError(null)\r\n        } else {\r\n            setFile(null)\r\n            setError('Please select an image file(png/jpg/jpeg)')\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"title\">\r\n                        Your Pictures\r\n                    <p>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>\r\n                    <input \r\n                        className=\"upload-btn\" \r\n                        type=\"file\" \r\n                        onChange={uploadImg} \r\n                        />\r\n                    {error && \r\n                        <p className=\"error\">{error}</p>}\r\n                    {file && <Fragment>\r\n                        <p className=\"file-name\">{file.name}</p>\r\n                        <ProgressBar file={file} setFile={setFile} /> </Fragment>}\r\n                    {!file && \r\n                        <div className=\"spacer\" >{\" \"}</div>}\r\n                </div>\r\n\r\n               <ImageGrid setSelectedImg={setSelectedImg}/>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React from 'react'\r\nimport './style.scss'\r\n\r\nexport default function Modal ({selectedImg, setSelectedImg}) {\r\n    const unselect = (e) => {\r\n        if (e.target.classList.contains('modal-backdrop'))\r\n        setSelectedImg(null)\r\n    }\r\n    return (\r\n        <div className=\"modal-backdrop\" onClick={unselect}>\r\n            <img src={selectedImg} alt=\"selectedImg\" />\r\n        </div>\r\n    )\r\n}","import React, { Fragment, useState } from 'react'\r\nimport Nav from '../../components/navigation'\r\nimport Grid from '../../components/profile'\r\nimport Modal from '../../components/profile/modal'\r\n\r\nexport default function Profile (props) {\r\n    const [selectedImg, setSelectedImg] = useState(null)\r\n\r\n    return (\r\n        <Fragment>\r\n            <Nav />\r\n            <Grid \r\n                setSelectedImg={setSelectedImg}/>\r\n            {selectedImg && \r\n            <Modal \r\n                selectedImg={selectedImg} \r\n                setSelectedImg={setSelectedImg} />}\r\n        </Fragment>\r\n    )\r\n}","import './App.css';\nimport Profile from './pages/profile'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}