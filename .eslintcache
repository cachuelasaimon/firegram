[{"C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\index.js":"1","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\App.js":"2","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\reportWebVitals.js":"3","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\pages\\profile\\index.js":"4","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\components\\navigation\\index.js":"5","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\components\\profile\\index.js":"6","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\firebase\\utils.js":"7","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\firebase\\config.js":"8","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\hooks\\useStorage.js":"9","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\components\\profile\\progressBar.js":"10","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\components\\profile\\imageGrid.js":"11","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\hooks\\index.js":"12","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\components\\profile\\image.js":"13","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\components\\profile\\modal.js":"14"},{"size":500,"mtime":1610336918948,"results":"15","hashOfConfig":"16"},{"size":170,"mtime":1610442513632,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610294691246,"results":"18","hashOfConfig":"16"},{"size":603,"mtime":1610443550548,"results":"19","hashOfConfig":"16"},{"size":482,"mtime":1610444317330,"results":"20","hashOfConfig":"16"},{"size":1818,"mtime":1610442757880,"results":"21","hashOfConfig":"16"},{"size":2303,"mtime":1610366907461,"results":"22","hashOfConfig":"16"},{"size":328,"mtime":1610361207103,"results":"23","hashOfConfig":"16"},{"size":1084,"mtime":1610423543773,"results":"24","hashOfConfig":"16"},{"size":626,"mtime":1610433033605,"results":"25","hashOfConfig":"16"},{"size":1103,"mtime":1610451735373,"results":"26","hashOfConfig":"16"},{"size":1592,"mtime":1610439636904,"results":"27","hashOfConfig":"16"},{"size":493,"mtime":1610448627836,"results":"28","hashOfConfig":"16"},{"size":401,"mtime":1610444815999,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"43pb6s",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\index.js",[],["63","64"],"C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\App.js",[],"C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\reportWebVitals.js",[],"C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\pages\\profile\\index.js",[],"C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\components\\navigation\\index.js",["65","66"],"import React from 'react'\r\nimport './style.scss'\r\n\r\nexport default function Nav (props) { \r\n    return (\r\n        <div className=\"navigation\">\r\n            <div className=\"nav-container\">\r\n                <div className=\"logo\">\r\n                    Firegram\r\n                </div>\r\n                <div className=\"links\">\r\n                    <a href=\"#\">Login</a>\r\n                    <a href=\"#\">SignUp</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\components\\profile\\index.js",["67"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport ProgressBar from './progressBar'\r\nimport ImageGrid from './imageGrid'\r\nimport './style.scss'\r\n\r\nexport default function Profile (props) {\r\n    const { setSelectedImg } = props\r\n    const [file, setFile] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n\r\n    useEffect(async ()=>{\r\n        if(file) {\r\n        }\r\n    },[file])\r\n\r\n    const acceptedFiles = ['image/png','image/jpeg','image/jpeg']\r\n\r\n    const uploadImg = async (e) => {\r\n        let selectedFile = e.target.files[0]\r\n        \r\n        if(selectedFile && acceptedFiles.includes(selectedFile.type)) { \r\n            setFile(selectedFile)\r\n            setError(null)\r\n        } else {\r\n            setFile(null)\r\n            setError('Please select an image file(png/jpg/jpeg)')\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"title\">\r\n                        Your Pictures\r\n                    <p>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>\r\n                    <input \r\n                        className=\"upload-btn\" \r\n                        type=\"file\" \r\n                        onChange={uploadImg} \r\n                        />\r\n                    {error && \r\n                        <p className=\"error\">{error}</p>}\r\n                    {file && <Fragment>\r\n                        <p className=\"file-name\">{file.name}</p>\r\n                        <ProgressBar file={file} setFile={setFile} /> </Fragment>}\r\n                    {!file && \r\n                        <div className=\"spacer\" >{\" \"}</div>}\r\n                </div>\r\n\r\n               <ImageGrid setSelectedImg={setSelectedImg}/>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\firebase\\utils.js",[],"C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\firebase\\config.js",[],"C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\hooks\\useStorage.js",["68","69"],"C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\components\\profile\\progressBar.js",["70","71","72"],"import React, { useEffect } from 'react'\r\nimport {useStorage} from '../../hooks'\r\n\r\nconst ProgressBar = ({ file, setFile}) => {\r\n   const { progress, url } = useStorage(file)\r\n\r\n    useEffect(async()=>{\r\n        // set File to null when upload finishes\r\n        if (progress == 100 && url) {\r\n            console.log(url)\r\n            await setFile(null)\r\n        }\r\n    },[url])\r\n\r\n    useEffect (()=>{console.log(file)},[file])\r\n\r\n    return(\r\n        <div \r\n            className=\"progress-bar\" \r\n            style={{ width: `${progress}%` }}>\r\n        {Math.round(progress)}%</div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar ","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\components\\profile\\imageGrid.js",["73"],"C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\hooks\\index.js",["74"],"import React, { useState, useEffect } from 'react'\r\nimport { firestore, storage } from '../firebase/utils'\r\n\r\nexport const useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0)\r\n    const [error, setError] = useState(null)\r\n    const [url, setUrl] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        // Set Refs \r\n        const storageRef = storage.ref(file.name)\r\n        const collectionRef = firestore.collection('pictures')\r\n\r\n        // Put File in Storage\r\n        storageRef.put(file).on('state_changed',(snap)=>{\r\n            // Percentage\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100\r\n            setProgress(percentage)\r\n        }, (err) => { setError(err) }, async () => {\r\n            // Get URl \r\n            let url = await storageRef.getDownloadURL()\r\n            let timestamp = new Date()\r\n            collectionRef.add({ url, createdAt: timestamp, name: file.name, })\r\n            setUrl(url)\r\n        })\r\n    },[file])\r\n\r\n    return {progress, error, url}\r\n}\r\n\r\nexport const useFirestore = (collection) => {\r\n    const [pictureList, setPictureList] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const unsub = firestore.collection(collection)\r\n        .orderBy('createdAt','desc')\r\n        .onSnapshot((pictures)=>{\r\n            let listOfPictures = []\r\n            pictures.forEach((picture=>{\r\n                listOfPictures.push({ id: picture.id, ...picture.data() })\r\n            }))\r\n        setPictureList(listOfPictures)\r\n        })\r\n        return () => unsub()\r\n    },[collection])\r\n\r\n    return { pictureList }\r\n}","C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\components\\profile\\image.js",[],"C:\\Users\\cachu\\Desktop\\WebDev\\React\\firegram\\src\\components\\profile\\modal.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":12,"column":21,"nodeType":"81","endLine":12,"endColumn":33},{"ruleId":"79","severity":1,"message":"80","line":13,"column":21,"nodeType":"81","endLine":13,"endColumn":33},{"ruleId":"82","severity":1,"message":"83","line":12,"column":15,"nodeType":"84","endLine":15,"endColumn":6},{"ruleId":"85","severity":1,"message":"86","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":10,"column":15,"nodeType":"84","endLine":28,"endColumn":6},{"ruleId":"82","severity":1,"message":"83","line":7,"column":15,"nodeType":"84","endLine":13,"endColumn":6},{"ruleId":"89","severity":1,"message":"90","line":9,"column":22,"nodeType":"91","messageId":"92","endLine":9,"endColumn":24},{"ruleId":"82","severity":1,"message":"93","line":13,"column":7,"nodeType":"94","endLine":13,"endColumn":12,"suggestions":"95"},{"ruleId":"85","severity":1,"message":"96","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":13},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'progress' and 'setFile'. Either include them or remove the dependency array. If 'setFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["99"],"'Image' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [progress, setFile, url]",{"range":"102","text":"103"},[373,378],"[progress, setFile, url]"]